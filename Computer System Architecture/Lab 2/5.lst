     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit
     5                                  import exit msvcrt.dll
     6                                  
     7                                  ; a-word; b,c,d-byte; e-doubleword; x-qword
     8                                  ; (a*2+b/2+e)/(c-d)+x/a
     9                                  ; 10/2+6=11
    10                                  
    11                                  segment data use32 class=data
    12 00000000 0200                        a dw 2
    13 00000002 04                          b db 4
    14 00000003 08                          c db 8
    15 00000004 06                          d db 6
    16 00000005 04000000                    e dd 4
    17 00000009 0C00000000000000            x dq 12
    18                                  
    19                                  segment code use32 class=code
    20                                  start:
    21 00000000 66B80200                    mov ax, 2
    22 00000004 66F725[00000000]            mul word [a]; dx:ax = a*2
    23 0000000B 6652                        push dx
    24 0000000D 6650                        push ax
    25 0000000F 59                          pop ecx ;ecx = a*2
    26                                      
    27 00000010 A0[02000000]                mov al, [b]
    28 00000015 B400                        mov ah, 0 ;ax = b
    29 00000017 B302                        mov bl, 2
    30 00000019 F6F3                        div bl ;al = b/2
    31 0000001B B400                        mov ah, 0 ;ax = b/2
    32 0000001D 66BA0000                    mov dx, 0 ;dx:ax = b/2
    33 00000021 6652                        push dx
    34 00000023 6650                        push ax
    35 00000025 5B                          pop ebx ;ebx = b/2
    36                                      
    37 00000026 01D9                        add ecx, ebx ;ecx = a*2+b/2
    38 00000028 030D[05000000]              add ecx, [e] ;ecx = (a*2+b/2+e)
    39                                      
    40 0000002E 89C8                        mov eax, ecx ;eax = (a*2+b/2+e)
    41 00000030 8A1D[03000000]              mov bl, [c] ;bl = c
    42 00000036 2A1D[04000000]              sub bl, [d] ;bl = c-d
    43 0000003C B700                        mov bh, 0 ;bx = c-d
    44 0000003E 66F7F3                      div bx ;dx:ax = (a*2+b/2+e)/(c-d)
    45                                      
    46 00000041 6652                        push dx
    47 00000043 6650                        push ax
    48                                      ;will come back to (a*2+b/2+e)/(c-d) later
    49                                      
    50 00000045 A1[09000000]                mov eax, dword [x]
    51 0000004A 8B15[0D000000]              mov edx, dword [x+4]
    52                                      
    53 00000050 668B1D[00000000]            mov bx, [a]
    54 00000057 66B90000                    mov cx, 0
    55 0000005B 6651                        push cx
    56 0000005D 6653                        push bx
    57 0000005F 5B                          pop ebx
    58 00000060 F7F3                        div ebx
    59                                      
    60 00000062 5B                          pop ebx
    61 00000063 01C3                        add ebx, eax
    62                                  
    63                                      ; exit(0)
    64 00000065 6A00                        push dword 0
    65 00000067 FF15[00000000]              call [exit]
