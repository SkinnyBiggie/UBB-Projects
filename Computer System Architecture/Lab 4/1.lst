     1                                  bits 32 
     2                                  global start        
     3                                  extern exit,printf ; tell nasm that exit exists even if we won't be defining it
     4                                  import exit msvcrt.dll ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     5                                  ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
     6                                  ; our data is declared here (the variables needed by our program)
     7                                  segment data use32 class=data
     8 00000000 6162636D6E              	s db 'a', 'b', 'c', 'm','n' ; declare the string of bytes
     9                                  	l equ $-s ; compute the length of the string in l
    10 00000005 00<rept>                	d times l db 0 ; reserve l bytes for the destination string and initialize it
    11                                  segment code use32 class=code
    12                                  start:
    13 00000000 B905000000              	mov ecx, l ; we put the length l in ECX in order to make the loop
    14 00000005 BE00000000              	mov esi, 0     
    15 0000000A E313                    	jecxz Sfarsit      
    16                                  	Repeta:
    17 0000000C 8A86[00000000]          		mov al, [s+esi]
    18 00000012 B320                    		mov bl, 'a'-'A' ; in order to obtain the corresponding upper case letter, we will decrease the ASCII CODE
    19                                  		; of 'a'-'A' from the lower case letter AL
    20 00000014 28D8                    		sub al, bl             
    21 00000016 8886[05000000]          		mov [d+esi], al    
    22 0000001C 46                      		inc esi
    23 0000001D E2ED                    	loop Repeta
    24                                  	Sfarsit:;end of the program
    25                                  
    26                                  	; exit(0)
    27 0000001F 6A00                    	push dword 0 ; push the parameter for exit onto the stack
    28 00000021 FF15[00000000]          	call [exit] ; call exit to terminate the program
